{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SodaDataFactory"
		},
		"AzureSqlSoda8DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlSoda8DB'"
		},
		"AzureSqlSoda9DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlSoda9DB'"
		},
		"Oracle_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_1to')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "indexValue",
							"value": {
								"value": "@string(add(int(variables('counter')),1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "counter",
							"value": {
								"value": "@variables('indexValue')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute UpdateStatuses_SP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UpdateStatuses_SP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"workflowId": {
									"value": "@int(pipeline().parameters.Iwfid)",
									"type": "Expression"
								},
								"value": {
									"value": "@int(variables('value'))",
									"type": "Expression"
								},
								"counter": {
									"value": "@int(variables('indexValue'))",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set tbl_OracleName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "tbl_OracleName",
							"value": {
								"value": "@if(equals(pipeline().parameters.flowName,'Buyers'),'apps.xxsoda_bpm_buyers_v',NULL)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set tbl_StagingName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set tbl_OracleName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "tbl_StagingName",
							"value": {
								"value": "@if(equals(pipeline().parameters.flowName,'Buyers'),'soda_oracle_buyers_staging',NULL)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set tbl_SQLName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set tbl_StagingName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "tbl_SqlName",
							"value": {
								"value": "@if(equals(pipeline().parameters.flowName,'Buyers'),'soda_oracle_buyers',NULL)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data_Oracle to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set tbl_SQLName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@{concat('SELECT * FROM ', variables('tbl_OracleName'), ' WHERE flieldB not like ''%test2%''')}",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{concat('DECLARE @sql nvarchar(max) = N''TRUNCATE TABLE '' +''',variables('tbl_StagingName'),''';EXEC(@sql);')}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tbl_Oracle",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@variables('tbl_OracleName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "tbl_Staging",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@variables('tbl_StagingName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "tbl_Oracle",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@variables('tbl_OracleName')",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"parameters": {
					"Iwfid": {
						"type": "int"
					},
					"flowName": {
						"type": "string"
					},
					"lastUpdateDate": {
						"type": "string"
					}
				},
				"variables": {
					"counter": {
						"type": "String",
						"defaultValue": "0"
					},
					"indexValue": {
						"type": "String",
						"defaultValue": "0"
					},
					"value": {
						"type": "String",
						"defaultValue": "0"
					},
					"tbl_OracleName": {
						"type": "String"
					},
					"tbl_StagingName": {
						"type": "String"
					},
					"tbl_SqlName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T20:44:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UpdateStatuses_SP')]",
				"[concat(variables('factoryId'), '/datasets/tbl_Oracle')]",
				"[concat(variables('factoryId'), '/datasets/tbl_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateStatuses_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spADF_UpdateStatus",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spADF_UpdateStatus]",
							"storedProcedureParameters": {
								"counter": {
									"value": {
										"value": "@pipeline().parameters.counter",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"value": {
									"value": {
										"value": "@pipeline().parameters.value",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"workflowId": {
									"value": {
										"value": "@pipeline().parameters.workflowId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlSoda9DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"workflowId": {
						"type": "int"
					},
					"value": {
						"type": "int"
					},
					"counter": {
						"type": "int"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T09:55:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/a_pipeline ADF dev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "testPipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[testPipeline]",
							"storedProcedureParameters": {
								"jhfgh": {
									"value": "\"ssss\"",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlSoda9DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-14T06:38:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "testPipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[testPipeline]",
							"storedProcedureParameters": {
								"jhfgh": {
									"value": "\"ssss\"",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlSoda9DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-13T08:28:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SourceDataset_1to",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.sourcetbl",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestinationDataset_1to",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.tblname",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@{concat('SELECT * FROM ', pipeline().parameters.sourcetbl, ' WHERE flieldB not like ''%test2%''')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{concat('DECLARE @sql nvarchar(max) = N''TRUNCATE TABLE '' +''',pipeline().parameters.tblname,''';EXEC(@sql);')}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_1to",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.sourcetbl",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_1to",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.tblname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "test",
							"value": {
								"value": "@string(activity('Lookup1').output.value[0])",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"tblname": {
						"type": "string",
						"defaultValue": "tbltest2"
					},
					"sourcetbl": {
						"type": "string",
						"defaultValue": "tbltest1"
					}
				},
				"variables": {
					"test": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-12-10T20:44:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_1to')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_1to')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Buyers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "APPS",
					"table": "XXSODA_BPM_BUYERS_V"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_1to')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlSoda9DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_1to')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlSoda9DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/soda_oracle11_buyers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlSoda9DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Buyer_Id",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Creation_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Update_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Full_Name",
						"type": "nvarchar"
					},
					{
						"name": "Email_Address",
						"type": "nvarchar"
					},
					{
						"name": "Disable_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "soda_oracle11_buyers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/soda_oracle11_buyers_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlSoda9DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Buyer_Id",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Creation_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Update_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Full_Name",
						"type": "nvarchar"
					},
					{
						"name": "Email_Address",
						"type": "nvarchar"
					},
					{
						"name": "Disable_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "soda_oracle11_buyers_staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbl_Oracle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "APPS",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbl_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlSoda9DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlSoda9DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSoda8DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlSoda8DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSoda9DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlSoda9DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SodaStreamOracleIntegration",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SodaStreamOracleIntegration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SodaStreamOracleIntegration')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "SodaStream Oracle Integration BPM workflows",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceDataset_1to",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SourceDataset_1to",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Sort1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tfieldA as string,\n\t\tflieldB as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 sort(asc(fieldA, true)) ~> Sort1\nSort1 alterRow(updateIf(equals(fieldA,flieldB))) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['fieldA'],\n\tformat: 'table',\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_1to')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {
				"preventDataExfiltration": false
			},
			"dependsOn": []
		}
	]
}